plugins {
	id 'fabric-loom' version '1.5+'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"createlagless" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}
repositories {
	mavenCentral()
	maven {
		name = 'aikar'
		url = 'https://repo.aikar.co/content/groups/aikar'
	}
	maven {
		name = 'sonatype_releases'
		url = 'https://oss.sonatype.org/content/repositories/releases'
	}
	maven {
		name = 'sonatype_snapshots'
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
	}

	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://dvs1.progwml6.com/files/maven/" } // JEI
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel

	maven { url = "https://mvn.devos.one/releases" } // Porting Lib Releases
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge config api port
}

dependencies {
	// Setup
	minecraft("com.mojang:minecraft:${minecraft_version}")
	mappings(loom.layered {
		it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
		it.mappings file("mappings/create-conflict-fix.tiny")
	})
	modImplementation("net.fabricmc:fabric-loader:${loader_version}")

	// dependencies
	modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_version}")

	// Create - dependencies are added transitively
	modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")

	// Development QOL
	modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")
	modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
